import {
  InputObject,
  TextInputProps,
  INPUT_TYPES,
  TEXT_INPUT_SIZE,
} from "@/components";
import { Person } from "@/models/Person";
export const UserInputModel = (person?: Person) => {
  return [
    {
      id: "firstName",
      label: "First Name",
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setValue: () => {},
      setShowError: () => {},
      // defaultValue: person?.firstName,
      required: true,
      placeHolder: "First Name",
    },
    {
      id: "middleName",
      label: "Middle Name",
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setValue: () => {},
      setShowError: () => {},
      defaultValue: person?.firstName,
      required: true,
      placeholder: "Middle Name",
    },
    {
      id: "lastName",
      label: "Last Name",
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setValue: () => {},
      setShowError: () => {},
      defaultValue: person?.lastName,
      required: true,
      placeholder: "FirstName LastName",
    },
    // {
    //   id: "gender",
    //   label: "Gender",
    //   setValue: () => {},
    //   span: TEXT_INPUT_SIZE.span1,
    //   style: INPUT_TYPES.dropdown,
    //   items: ["Select a Gender", "Female", "Male"],
    //   editMode: true,
    //   copy: "",
    //   setShowError: () => {},
    //   defaultValue: person?.sex,
    //   required: true,
    // },
    // {
    //   id: "relationship",
    //   label: "Relationship",
    //   setValue: () => {},
    //   span: TEXT_INPUT_SIZE.span1,
    //   style: INPUT_TYPES.dropdown,
    //   items: [
    //     "Select a Relationship",
    //     "Child",
    //     "Parent",
    //     "Spouse",
    //     "Sibling",
    //     "Partner",
    //     "Unspecified",
    //   ],
    //   editMode: true,
    //   copy: "",
    //   setShowError: () => {},
    //   defaultValue: person?.relationship,
    //   required: true,
    // },
    {
      id: "address",
      label: "Address",
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.address,
      editMode: true,
      copy: "",
      placeHolder: "",
      disabled: true,
      setShowError: () => {},
      setValue: () => {},
      required: true,
    },
    {
      id: "roleConfig",
      label: "Role Config",
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.checkBox,
      editMode: true,
      copy: "",
      placeHolder: "",
      disabled: false,
      setShowError: () => {},
      setValue: () => {},
      required: false,
    },

    {
      id: "phone",
      label: "Phone Number",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.phone,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: person?.phone,
      required: true,
    },
    {
      id: "email",
      label: "Email Address",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.email,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: person?.email,
    },
    {
      id: "licenseNumber",
      label: "License Number",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: person?.licenseInformation?.number,
      required: true,
    },
    {
      id: "licenseClass",
      label: "License Class",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: person?.licenseInformation?.class,
      required: true,
    },
    {
      id: "licenseStart",
      label: "License Start",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.date,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: person?.licenseInformation?.expirationDate,
      required: true,
    },
    {
      id: "licenseEnd",
      label: "License End",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.date,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: person?.licenseInformation?.expirationDate,
      required: true,
    },
    {
      id: "licenseEnd",
      label: "License End",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: person?.licenseInformation?.expirationDate,
      required: true,
    },
    {
      id: "staffID",
      label: "Employee ID",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: person?.licenseInformation?.expirationDate,
      required: true,
    },
    {
      id: "jobTitle",
      label: "Job Title",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.phone,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: person?.phone,
      required: true,
    },
    {
      id: "percentage",
      label: "Percentage",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.number,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: person?.email,
      required: true,
    },
    {
      id: "dateOfBirth",
      label: "Date of Birth",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.date,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: person?.email,
      required: true,
    },
  ];
};
