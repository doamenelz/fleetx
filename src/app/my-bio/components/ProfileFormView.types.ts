import {
  InputObject,
  TextInputProps,
  INPUT_TYPES,
  TEXT_INPUT_SIZE,
} from "@/components";
import { Employee } from "@/models";

export const BasicInfo = (employee: Employee) => {
  return [
    {
      id: "title",
      label: "Title",
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      items: ["Select a Value", "Mr", "Mrs", "Miss"],
      editMode: true,
      copy: "",
      setValue: () => {},
      setShowError: () => {},
      defaultValue: employee.bioData.title,
      required: true,
    },
    {
      id: "firstName",
      label: "First Name",
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      placeHolder: "",
      disabled: true,
      setShowError: () => {},
      setValue: () => {},
      defaultValue: employee.bioData.firstName,
      required: true,
    },
    {
      id: "lastName",
      label: "Last Name",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      placeHolder: "",
      disabled: true,
      setShowError: () => {},
      defaultValue: employee.bioData.lastName,
      required: true,
    },
    {
      id: "otherNames",
      label: "Other Name(s)",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      required: false,
      defaultValue: employee.bioData.otherNames,
    },
    {
      id: "maidenName",
      label: "Maiden Name",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.bioData.maidenName,
    },
    {
      id: "gender",
      label: "Gender",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      items: ["Select a Gender", "Female", "Male"],
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.bioData.gender,
      required: true,
    },
    {
      id: "dateOfBirth",
      label: "Date of Birth",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.date,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.bioData.dateOfBirth,
      required: true,
    },
    {
      id: "placeOfBirth",
      label: "Place of Birth",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      items: ["United States", "Nigeria", "South Africa"],
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.bioData.placeOfBirth,
      required: true,
    },
    {
      id: "maritalStatus",
      label: "Marital Status",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      items: ["Single", "Married", "Divorced"],
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee?.bioData.maritalStatus,
      required: true,
    },
    {
      id: "marriageDate",
      label: "Marriage Date",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.date,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
      value: employee.bioData.marriageDate,
    },
    {
      id: "religion",
      label: "Religion",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      items: ["Islam", "Christianity", "Atheism"],
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee?.bioData.religion,
    },
    {
      id: "stateOfOrigin",
      label: "State Of Origin",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      items: ["Abia", "Cross Rivers", "Rivers", "Lagos"],
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee?.contactDetails?.stateOfOrigin,
      required: true,
    },
    {
      id: "nationality",
      label: "Nationality",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      items: ["Select a Country", "Nigeria", "England"],
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee?.contactDetails?.nationality,
      required: true,
    },
    {
      id: "lga",
      label: "Local Government Area",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      items: ["Maryland", "Victoria Island"],
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee?.contactDetails?.lga,
      required: true,
    },
  ];
};

export const ContactInfo = (employee: Employee) => {
  return [
    {
      id: "personalMobile",
      label: "Personal Mobile Number",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.phone,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.contactDetails?.phoneNumber,
      required: true,
    },
    {
      id: "personalEmail",
      label: "Personal Email Address",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.email,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.contactDetails?.emailAddress,
    },
    {
      id: "officeEmail",
      label: "Office Email",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.email,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.contactDetails?.officialEmail,
    },
    {
      id: "officeExtension",
      label: "Office Extension",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.contactDetails?.officeExtension,
    },
    {
      id: "residentialAddress",
      label: "Residential Street Address",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.contactDetails?.residentialAddress?.streetAddress,
    },
    {
      id: "residentialAddressCity",
      label: "Residential City",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.contactDetails?.residentialAddress?.city,
    },
    {
      id: "residentialAddressState",
      label: "Resident State",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      editMode: true,
      items: ["Lagos", "Abuja", "Rivers"],
      copy: "",
      setShowError: () => {},
      defaultValue: employee.contactDetails?.residentialAddress?.state,
    },
    {
      id: "residentialAddressCountry",
      label: "Resident Country",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      items: ["Nigeria", "Canada", "US", "Ghana"],
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "Nigeria",
    },
    {
      id: "permanentAddress",
      label: "Permanent Address",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.contactDetails?.permanentAddress?.streetAddress,
    },
    {
      id: "permanentAddressCity",
      label: "Permanent City",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: employee.contactDetails?.permanentAddress?.city,
    },
    {
      id: "permanentAddressState",
      label: "Permanent State",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      editMode: true,
      items: ["Lagos", "Abuja", "Rivers"],
      copy: "",
      setShowError: () => {},
      defaultValue: employee.contactDetails?.permanentAddress?.state,
    },
    {
      id: "permanentAddressCountry",
      label: "Resident Country",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.dropdown,
      items: ["Nigeria", "Canada", "US", "Ghana"],
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "Nigeria",
    },
  ];
};

export const OtherInfo = (employee: Employee) => {
  return [
    {
      id: "passport",
      label: "Passport Details",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
    {
      id: "passportNumber",
      label: "Passport Number",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
    {
      id: "passportIssuedBy",
      label: "Issued by",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
    {
      id: "passportStart",
      label: "Start Date",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
    {
      id: "passportEnd",
      label: "End Date",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
    {
      id: "height",
      label: "Height(cm)",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
    {
      id: "weight",
      label: "Weight(kg)",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
    {
      id: "genoType",
      label: "Genotype",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
    {
      id: "bloodGroup",
      label: "Blood Group",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
    {
      id: "disability",
      label:
        "Disability or Serious Illness that the organization should be aware of",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
    {
      id: "motivations",
      label: "Motivations",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
    {
      id: "hobbies",
      label: "Hobbies",
      setValue: () => {},
      span: TEXT_INPUT_SIZE.span1,
      style: INPUT_TYPES.text,
      editMode: true,
      copy: "",
      setShowError: () => {},
      defaultValue: "",
    },
  ];
};
